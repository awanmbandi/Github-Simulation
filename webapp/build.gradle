/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    //id 'com.example.maven-project.java-conventions'
    id 'war'
    id "com.jfrog.artifactory" version "4.18.3"
    //id 'com.github.spotbugs' version '5.0.14' apply false // Generates HTML based Reports
}

//apply plugin: 'org.akhikhl.gretty'
apply plugin: "com.jfrog.artifactory"
apply plugin: 'maven-publish'
//apply plugin: 'jacoco'
//apply plugin: 'checkstyle'
//apply plugin: 'pmd'
//apply plugin: 'project-report'  // Generates Reports and Provide Nice HTML Vidual For Reports Such as "Build", "Configs" and "Dependencies"
//apply plugin: 'build-dashboard' // Generates HTML based Reports for tools like CheckStyke, FindBugs, Jacoco, HTML Dependency, PMD, Java Unit Test
//apply plugin: 'findbugs'
//apply plugin: "com.github.spotbugs"

/*
allprojects {
  repositories {
    jcenter {
        url "http://jcenter.bintray.com/"
    }
  }
}
*/

repositories {
   mavenCentral()
}

dependencies {
    providedCompile 'javax.servlet:servlet-api:2.5'
    providedCompile 'javax.servlet.jsp:jsp-api:2.2'
    //compile group: 'javax.servlet.jsp', name: 'javax.servlet.jsp', version: '2.0.0'
    //providedCompile group: 'javax.servlet.jsp', name: 'jsp-api', version: '2.0'
    providedCompile 'org.apache.tomcat:tomcat-catalina:8.5.16'
}

description = 'Webapp'

// JFrog Artifact Upload
artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            repoKey = 'gradle-javawebapp-local-repo-v2' // The Artifactory repository key to publish to
            username = "${artifactory_user}" // The publisher user name
            password = "${artifactory_password}" // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenWeb')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            // properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
    resolve {
        repository {
            repoKey = 'gradle-javawebapp-virtual-repo'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            
        }
    }
}