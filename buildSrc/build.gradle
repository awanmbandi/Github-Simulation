/*
 * This file was generated by the Gradle 'init' task.
 */

/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id "com.jfrog.artifactory" version "4.18.3"
    id 'com.github.spotbugs' version '5.0.14' apply false // Generates HTML based Reports
}

apply plugin: 'war'
//apply plugin: 'org.akhikhl.gretty'
apply plugin: "com.jfrog.artifactory"
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
//apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'project-report'  // Generates Reports and Provide Nice HTML Vidual For Reports Such as "Build", "Configs" and "Dependencies"
apply plugin: 'build-dashboard' // Generates HTML based Reports for tools like CheckStyke, FindBugs, Jacoco, HTML Dependency, PMD, Java Unit Test
//apply plugin: 'findbugs'
//apply plugin: "com.github.spotbugs"

// Artifact Secondary Folder Name/Version
version = "1.1"

defaultTasks 'clean', 'build'

/*
repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}
*/

repositories {
   mavenCentral()
}

dependencies {
   providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
}

group = 'com.example.maven-project'
version = '1.0-SNAPSHOT'
java.sourceCompatibility = JavaVersion.VERSION_1_8

/*
publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
*/

publishing {
    publications {
        mavenWeb(MavenPublication) {
            from components.web
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
}

//Unit and Integration Test
test {
    testLogging {
        // show standard out and standard error of the test JVM(s) on the console
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    useTestNG() {
        excludeGroups 'integration'
    }
}

task integrationTest(type: Test, dependsOn: 'test') {
    testLogging {
        // show standard out and standard error of the test JVM(s) on the console
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    useTestNG() {
        includeGroups 'integration'
    }
}

//  SpotBugs Test
subprojects {
    //spot bugs reports generated only this way
    apply plugin: 'com.github.spotbugs'
    spotbugs {
        toolVersion = '4.2.3'
    }

    tasks.withType(SpotBugsTask) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
}

// Checkstyle SAST tool for compliant with specified coding rules
checkstyle {
  toolVersion = '6.16.1'
  config = rootProject.resources.text.fromFile('checkstyle/rules/rules.xml')
  ignoreFailures = true
}

// PMD: SAST Tool, used for Static Code Analysis just like SonarQube
pmd {
  toolVersion = '6.0.0'
  ruleSetConfig = rootProject.resources.text.fromFile('pmd/ruleset.xml')
  ignoreFailures = true
}